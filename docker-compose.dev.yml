version: '3'
services:

  postgis:
    image: mdillon/postgis:10
    container_name: arpav_postgis
    restart: unless-stopped
    expose:
      - 5432
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      PGPASSWORD: '${PGPASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB_NAME}'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    container_name: arpav_redis
    image: redis:4
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - redisdata:/data

  backend:
    env_file: .env
    container_name: backend.api
    image: padoa_backend
    build: .
    command: ${API_COMMAND:-dev}
    restart: unless-stopped
    #    user: ${UID:-1000}
    environment:
      GUNICORN_WORKERS: 15
    expose:
      - 8000
#    ports:
#      - 8000:8000
    depends_on:
      - postgis
#      - proxy
    volumes:
      - ./backend/djangoapp:/opt/api/app/djangoapp
      - ./backend/padoa:/opt/api/app/padoa
      - ./backend/storage:/opt/api/app/storage
      - ./backend/resources:/opt/api/app/resources
      - ./backend/templates:/opt/api/app/templates
      - .env:/opt/api/app/.env
#    command: 'manage check'

  martin:
    image: 'maplibre/martin:v0.6'
    container_name: martin
    restart: unless-stopped
    expose:
      - 3000
#    ports:
#      - "3001:3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${PGPASSWORD}@postgis/${POSTGRES_DB_NAME}
      - RUST_LOG=actix_web=info,martin=debug,tokio_postgres=debug
    depends_on:
      - postgis

  proxy:
    image: nginx
    container_name: proxy
    volumes:
      - ./docker/nginx_local/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx_local/nginx.conf:/etc/nginx/nginx.conf
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    environment:
     - NGINX_HOST=proxy
     - NGINX_PORT=80
    depends_on:
      - backend
      - thredds
      - martin

  thredds:
    container_name: thredds
    build:
      context: ./thredds_helper
#    ports:
#     - "8089:8089"
    expose:
      - 8089
    restart: always
    environment:
     - THREDDS_PASSWORD=${THREDDS_PASSWORD}

  frontend:
    container_name: frontend
    image: ppcv_frontend:latest
    build:
      context: ./Arpav-PPCV
    expose:
      - 80
    restart: always

volumes:
  redisdata:
  pgdata: